<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Game Design on Will Gueble</title>
    <link>https://grueble.github.io/tags/game-design/</link>
    <description>Recent content in Game Design on Will Gueble</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2017 Will Gueble. All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 10 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://grueble.github.io/tags/game-design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design</title>
      <link>https://grueble.github.io/posts/design/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grueble.github.io/posts/design/</guid>
      <description>Early in the design process, I turned to the chess programming community for inspiration on how to structure my game’s logic. I quickly encountered a slew of different strategies, but the debate between piece-based vs. board-based representation caught my eye. In the former, data about the game state is stored as a collection of pieces; in the latter, the data is formatted as a 2D array of tiles. Both options provide a similar degree of expressiveness and flexibility, so the decision came down to contextual requirements in the end.</description>
    </item>
    
  </channel>
</rss>